name: GitAlong CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.24.5'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Analyze project source
      run: flutter analyze
    
    - name: Run tests
      run: flutter test
    
    - name: Run integration tests
      run: flutter test integration_test/
    
    - name: Build APK
      run: flutter build apk --release
    
    - name: Build iOS (simulator)
      run: flutter build ios --release --no-codesign
    
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: build/app/outputs/flutter-apk/app-release.apk

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Run security audit
      run: flutter pub deps --style=compact
    
    - name: Check for vulnerabilities
      run: |
        # Add security scanning tools here
        echo "Security scan completed"

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Check code formatting
      run: dart format --set-exit-if-changed .
    
    - name: Run linter
      run: flutter analyze --fatal-infos
    
    - name: Check for unused imports
      run: dart fix --dry-run

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test, security, quality]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build for production
      run: flutter build apk --release
    
    - name: Deploy to Firebase
      run: |
        # Add Firebase deployment commands here
        echo "Deployment completed"
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          Changes in this Release:
          - Automated deployment from CI/CD
          - Build number: ${{ github.run_number }}
        draft: false
        prerelease: false 